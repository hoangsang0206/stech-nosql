@model Tuple<ProductMVM, IEnumerable<ReviewMVM>>

@{
    ProductMVM product = Model.Item1;
    IEnumerable<ReviewMVM> reviews = Model.Item2;

    ViewData["Title"] = $"Đánh giá sản phẩm - {product?.ProductId} - STech Admin";
    ViewData["PageTitle"] = "Đánh giá sản phẩm - " + product?.ProductId;


    int totalReviews = reviews.Count();
    double averageRating = totalReviews > 0 ? Math.Round(reviews.Average(r => r.Rating), 1) : 0;

    int total5Stars = reviews.Count(r => r.Rating == 5);
    int total4Stars = reviews.Count(r => r.Rating == 4);
    int total3Stars = reviews.Count(r => r.Rating == 3);
    int total2Stars = reviews.Count(r => r.Rating == 2);
    int total1Star = reviews.Count(r => r.Rating == 1);
}

<section>

    <input type="hidden" id="ProductId" value="@product?.ProductId" />

    <div class="page-content-box no-border">
        <div class="page-content-header d-flex gap-2">
            @product?.ProductName
        </div>

        <div>
            <div class="d-flex align-items-center gap-4">
                <div class="d-flex flex-column rating-summary">
                    <div class="rating-star-summary d-flex gap-2 align-items-center">
                        <i class="fa-solid fa-star"></i>
                        <span class="ms-2">@(averageRating)/5</span>
                    </div>
                    <span class="mt-3">
                        @(totalReviews > 0 ? $"{totalReviews} đánh giá" : "Chưa có đánh giá")
                    </span>
                </div>

                <div class="overflow-x-auto" id="rating-summary">
                    <div class="rating-summary-item">
                        @await Html.PartialAsync("PartialViews/Review_StarGroup", 5)
                        <progress value="@(totalReviews > 0 ? (Convert.ToDouble(total5Stars) / totalReviews) * 100 : 0)" max="100"></progress>
                        <span>@total5Stars</span>
                    </div>
                    <div class="rating-summary-item">
                        @await Html.PartialAsync("PartialViews/Review_StarGroup", 4)
                        <progress value="@(totalReviews > 0 ? (Convert.ToDouble(total4Stars) / totalReviews) * 100 : 0)" max="100"></progress>
                        <span>@total4Stars</span>
                    </div>
                    <div class="rating-summary-item">
                        @await Html.PartialAsync("PartialViews/Review_StarGroup", 3)
                        <progress value="@(totalReviews > 0 ? (Convert.ToDouble(total3Stars) / totalReviews) * 100 : 0)" max="100"></progress>
                        <span>@total3Stars</span>
                    </div>
                    <div class="rating-summary-item">
                        @await Html.PartialAsync("PartialViews/Review_StarGroup", 2)
                        <progress value="@(totalReviews > 0 ? (Convert.ToDouble(total2Stars) / totalReviews) * 100 : 0)" max="100"></progress>
                        <span>@total2Stars</span>
                    </div>
                    <div class="rating-summary-item">
                        @await Html.PartialAsync("PartialViews/Review_StarGroup", 1)
                        <progress value="@(totalReviews > 0 ? (Convert.ToDouble(total1Star) / totalReviews) * 100 : 0)" max="100"></progress>
                        <span>@total1Star</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="page-wrapper mt-3" data-current-user="@(User.FindFirst("Id")?.Value)">
        <div class="page-content-header">
            Đánh giá
        </div>

        <div>

            <div>
                @await Html.PartialAsync("PartialViews/ReviewFilters")
            </div>

            <div class="review-list mt-3">
                @foreach (ReviewMVM review in reviews)
                {
                    @await Html.PartialAsync("PartialViews/Review", review)
                }
            </div>

            @await Html.PartialAsync("PartialViews/_Pagination", new Tuple<int, int>(ViewBag.CurrentPage, ViewBag.TotalPages))

        </div>
    </div>
</section>

<div class="form-container reply-review">
    <div class="form-box d-flex flex-column" style="width: 50rem; height: 50rem;">
        <div class="d-flex">
            <div class="review flex-grow-1">
            </div>

            <div>
                <button class="page-btn-reload reload-replies">
                    <i class="fa-solid fa-rotate-right"></i>
                </button>
            </div>
        </div>

        <hr />

        <div class="review-replies flex-grow-1">
        </div>

        @await Html.PartialAsync("PartialViews/Form_ReviewReply", new ReviewReplyVM())
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/admin/css/reviews.css" />
}

@section Scripts {
    <script src="~/admin/js/reviews.js"></script>
}